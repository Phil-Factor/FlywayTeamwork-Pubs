{
    "columns":  [
                    "TheOrder int IDENTITY(1,1)",
                    "@TheString nvarchar(MAX)",
                    "TheWord nvarchar(50)"
                ],
    "Definition":  "CREATE FUNCTION [dbo].[SplitStringToWords] (@TheString NVARCHAR(MAX))\r\n/**\r\nSummary: \u003e\r\n  This table function takes a string of text and splits it into words. It\r\n  takes the approach of identifying spaces between words so as to accomodate\r\n  other character sets\r\nAuthor: Phil Factor\r\nDate: 27/05/2021\r\nRevised: 28/10/2021\r\nExamples:\r\n   - SELECT * FROM dbo.SplitStringToWords \r\n         (\u0027This, (I think), might be working\u0027)\r\n   - SELECT * FROM dbo.SplitStringToWords(\u0027This, \r\n        must -I assume - deal with \u003cbrackets\u003e \u0027)\r\nReturns: \u003e\r\n  a table of the words and their order in the text.\r\n**/\r\nRETURNS @Words TABLE ([TheOrder] INT IDENTITY, TheWord NVARCHAR(50) NOT NULL)\r\nAS\r\n  BEGIN\r\n    DECLARE @StartWildcard VARCHAR(80), @EndWildcard VARCHAR(80), @Max INT,\r\n      @start INT, @end INT, @Searched INT, @ii INT;\r\n    SELECT @TheString=@TheString+\u0027 !\u0027,\r\n\t\t   @StartWildcard = \u0027%[^\u0027+Char(1)+\u0027-\u0027+Char(64)+\u0027\\-`\u003c\u003e{}|~]%\u0027, \r\n\t       @EndWildcard   = \u0027%[^1-9A-Z\u0027\u0027-]%\u0027, \r\n           @Max = Len (@TheString), @Searched = 0, \r\n\t\t   @end = -1, @Start = -2, @ii = 1\r\n\t  WHILE (@end \u003c\u003e 0 AND @start\u003c\u003e0 AND @end\u003c\u003e@start AND @ii\u003c1000)\r\n      BEGIN\r\n        SELECT @start =\r\n        PatIndex (@StartWildcard, Right(@TheString, @Max - @Searched) \r\n\t\t  COLLATE Latin1_General_CI_AI )\r\n        SELECT @end =\r\n        @start\r\n        + PatIndex (\r\n                   @EndWildcard, Right(@TheString, @Max - @Searched - @start) \r\n\t\t\t\t     COLLATE Latin1_General_CI_AI\r\n                   );\r\n        IF @end \u003e 0 AND @start \u003e 0 AND @end\u003c\u003e@start\r\n          BEGIN\r\n-- SQL Prompt formatting off\r\n\t\t  INSERT INTO @Words(TheWord) \r\n\t\t    SELECT Substring(@THeString,@searched+@Start,@end-@start)\r\n\t\t\t-- to force an error try commenting out the line above\r\n\t\t\t-- and uncommenting this next line below\r\n\t\t\t--SELECT Substring(@THeString,@searched+@Start+1,@end-@start)\r\n\t\t\t--to make the tests fail\r\n\t\t  END\r\n-- SQL Prompt formatting on\r\n        SELECT @Searched = @Searched + @end, @ii = @ii + 1;\r\n      END;\r\n    RETURN;\r\n  END;",
    "documentation":  ""
}
